# d://log Notes
> Personal tech log covering DevOps, MLOps, AI, infrastructure and more.

## Ai Specializations
- [The Math of Generative AI: How Models Learn Data Distributions](https://dangattringer.github.io/docs/notes/ai-specializations/image-generation/probabilistic-mathematical-foundations): Explore the math behind generative AI. Learn how models represent data on a low-dimensional manifold and use VAEs to overcome the intractable partition function.
- [Variational Autoencoders: From Compression to Generation](https://dangattringer.github.io/docs/notes/ai-specializations/image-generation/variational-autoencoder): Explore the architecture and training of Variational Autoencoders (VAEs), a powerful class of generative models. Learn how they encode data into a probabilistic latent space and decode it back, enabling the generation of new, coherent samples.
- [Image Generation](https://dangattringer.github.io/docs/notes/ai-specializations/image-generation): From Noise to Structure
- [AI Specializations: An Overview](https://dangattringer.github.io/docs/notes/ai-specializations): Explore key AI specializations like Computer Vision, Natural Language Processing (NLP), Agents, and more. Understand the core concepts driving modern artificial intelligence.
- [What Is a Vector Database? A Guide to AI Search & RAG](https://dangattringer.github.io/docs/notes/ai-specializations/vector-stores): Learn what a vector database is and how it powers AI features like semantic search and RAG. This guide covers vector embeddings, ANN algorithms, and top options.
- [Model Context Protocol (MCP): The Open Standard for AI Tool Integration](https://dangattringer.github.io/docs/notes/ai-specializations/agentic-systems/model-context-protocol): Learn about the Model Context Protocol (MCP), an open standard that simplifies how AI assistants and LLMs securely connect to external data, APIs, and tools.
- [What Are Agentic Systems? A Guide to Autonomous AI Agents](https://dangattringer.github.io/docs/notes/ai-specializations/agentic-systems): Explore agentic systems, the next evolution of generative AI. Learn how autonomous AI agents can reason, plan, and execute complex tasks.

## Devops
- [What is DevOps? A Guide to Culture, Tools, and Practices](https://dangattringer.github.io/docs/notes/devops): Learn the core principles of DevOps, including the CAMS model (Culture, Automation, Measurement, Sharing) and the key practices that accelerate software delivery.
- [What Is Kubernetes? A DevOps Intro to Orchestration](https://dangattringer.github.io/docs/notes/devops/kubernetes): Learn what Kubernetes (K8s) is and why it's essential for modern DevOps. Explore container orchestration, self-healing, scaling, and its role with Docker.
- [What Is Kubernetes? A Guide to Container Orchestration](https://dangattringer.github.io/docs/notes/devops/kubernetes): Learn what Kubernetes is, how it works, and why it's the leading platform for container orchestration. Explore core concepts like pods, nodes, and clusters.
- [What is Infrastructure as Code (IaC)? Tools & Benefits](https://dangattringer.github.io/docs/notes/devops/iac): Learn what Infrastructure as Code (IaC) is, its key benefits, and top tools like Terraform and Ansible for automating modern cloud infrastructure management.
- [What is Terraform? An Introduction to Infrastructure as Code](https://dangattringer.github.io/docs/notes/devops/iac/terraform): Learn what Terraform is and how its declarative Infrastructure as Code (IaC) workflow helps you provision and manage cloud infrastructure. Learn about core components, providers, and the init, plan, and apply cycle.
- [A Guide to Docker Images: Pull, Tag, and Inspect](https://dangattringer.github.io/docs/notes/devops/docker): Learn how to work with Docker images. This guide covers pulling from registries like Docker Hub, understanding image layers, tagging, and inspecting images.
- [What Is Docker? A Guide to Containers & CI/CD](https://dangattringer.github.io/docs/notes/devops/docker): Explore Docker fundamentals, from containers and images to essential commands. Learn best practices for simplifying development and streamlining CI/CD pipelines.
- [Docker Explained: From Containers to Engine Architecture](https://dangattringer.github.io/docs/notes/devops/docker): Learn how Docker works, from containers vs. VMs to its engine architecture. Learn about containerd, runc, shims, and the container lifecycle.
- [Docker vs. WebAssembly: Which is Better for Kubernetes?](https://dangattringer.github.io/docs/notes/devops/docker): Explore the key differences between Docker containers and WebAssembly (Wasm). Learn which is better for microservices, edge computing, and Kubernetes orchestration.
- [Kubernetes Architecture: From Container Images to Running Pods](https://dangattringer.github.io/docs/notes/devops/kubernetes): A complete guide to Kubernetes architecture. Learn about the control plane, compute nodes, and core components like kube-apiserver, etcd, and kubelet

## Foundations
- [Foundations of Modern Software Engineering](https://dangattringer.github.io/docs/notes/foundations)
- [Git Version Control: Notes and Resources](https://dangattringer.github.io/docs/notes/foundations/git): Git, the version control system and its cloud-based platform for collaboration.
- [How Git Works: A Guide to Internals, Objects, and Trees](https://dangattringer.github.io/docs/notes/foundations/git): A deeper look into how Git works, covering the file lifecycle, the .git directory structure, Git objects (blobs, trees, commits), and storage efficiency.
